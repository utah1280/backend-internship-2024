definitions:
  category.basicResponse:
    properties:
      success:
        type: boolean
    type: object
  category.categoryListResponse:
    properties:
      categories:
        items:
          $ref: '#/definitions/storage.Category'
        type: array
    type: object
  category.categoryRequest:
    properties:
      label:
        type: string
    type: object
  category.categoryResponse:
    properties:
      id:
        type: integer
    type: object
  category.fetchCategoryRespones:
    properties:
      category:
        $ref: '#/definitions/storage.Category'
    type: object
  category.updateCategoryLabelRequest:
    properties:
      label:
        type: string
    type: object
  contact.basicResponse:
    properties:
      success:
        type: boolean
    type: object
  contact.createContactRequest:
    properties:
      address:
        type: string
      email:
        type: string
      label:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  contact.createContactResponse:
    properties:
      id:
        type: integer
    type: object
  contact.fetchContactResponse:
    properties:
      contact:
        $ref: '#/definitions/storage.Contact_'
    type: object
  storage.Category:
    properties:
      created_at:
        type: string
      id:
        type: integer
      label:
        type: string
    type: object
  storage.Contact_:
    properties:
      address:
        type: string
      category:
        type: string
      category_id:
        type: integer
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      phone:
        type: string
    type: object
info:
  contact: {}
paths:
  /categories/add-category:
    post:
      consumes:
      - application/json
      description: Create a new category with the given label
      parameters:
      - description: Category details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/category.categoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/category.categoryResponse'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create a new category
      tags:
      - Categories
  /categories/delete-category/{id}:
    delete:
      consumes:
      - application/json
      description: Delete category with the given id
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/category.basicResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Delete category
      tags:
      - Categories
  /categories/get-categories:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/category.categoryListResponse'
      summary: Get list of categories
      tags:
      - Categories
  /categories/get-category/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve details of a category based on the provided ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/category.fetchCategoryRespones'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Get a category by ID
      tags:
      - Categories
  /categories/update-category/{id}:
    patch:
      consumes:
      - application/json
      description: Update the label of a category
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Category details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/category.updateCategoryLabelRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/category.basicResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Update category label
      tags:
      - Categories
  /contacts/delete-contact/{id}:
    delete:
      consumes:
      - application/json
      description: Delete contact with the given id
      parameters:
      - description: Contact ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contact.basicResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Delete contact
      tags:
      - Contacts
  /contacts/get-contact/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve details of a contact based on the provided ID
      parameters:
      - description: Contact ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contact.fetchContactResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Get a contact by ID
      tags:
      - Contacts
  /contacts/get-contacts:
    get:
      consumes:
      - application/json
      description: Retrieve a list of contacts with optional filtering, sorting, and
        pagination
      parameters:
      - description: Limit results per page
        in: query
        name: limit
        type: integer
      - description: Offset results for pagination
        in: query
        name: offset
        type: integer
      - description: Filter by contact name
        in: query
        name: name
        type: string
      - description: Filter by contact email
        in: query
        name: email
        type: string
      - description: Filter by category label
        in: query
        name: category
        type: string
      - description: Sort direction (ASC default)
        in: query
        name: sortDir
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/storage.Contact_'
            type: array
      summary: Get list of contacts
      tags:
      - Contacts
  /contacts/new-contact:
    post:
      consumes:
      - application/json
      description: Create a new contact with the given details
      parameters:
      - description: Contact details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/contact.createContactRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contact.createContactResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a new contact
      tags:
      - Contacts
  /contacts/update-contact/{id}:
    patch:
      consumes:
      - application/json
      description: Update contact details by ID
      parameters:
      - description: Contact ID
        in: path
        name: id
        required: true
        type: integer
      - description: Contact name
        in: query
        name: name
        type: string
      - description: Contact phone
        in: query
        name: phone
        type: string
      - description: Contact email
        in: query
        name: email
        type: string
      - description: Contact address
        in: query
        name: address
        type: string
      - description: Contact category
        in: query
        name: category
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contact.basicResponse'
        "400":
          description: Invalid contact ID
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update an existing contact
      tags:
      - Contacts
swagger: "2.0"
